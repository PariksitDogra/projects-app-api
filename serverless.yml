service: projects-app-api

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: eu-west-2

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-west-2:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role
  createUser:
    handler: createUser.main
    events:
      - http:
          path: users
          method: post
          cors: true
          authorizer: aws_iam
  createProject:
    handler: createProject.main
    events:
      - http:
          path: projects
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: get.main
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
          authorizer: aws_iam
  getLoggedUser:
    handler: getLoggedUser.main
    events:
      - http:
          path: users
          method: get
          cors: true
          authorizer: aws_iam

  getProject:
    handler: getProject.main
    events:
      - http:
          path: projects/{id}
          method: get
          cors: true
          authorizer: aws_iam
  
  update:
    handler: update.main
    events:
      - http:
          path: users/{id}
          method: put
          cors: true
          authorizer: aws_iam
  removeUser:
    handler: removeUser.main
    events:
      - http:
          path: users/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  returnProjects:
    handler: returnProjects.main
    events:
      - http:
          path: projects/plist
          method: post
          cors: true
          authorizer: aws_iam
  returnAllProjects:
    handler: returnAllProjects.main
    events:
      - http:
          path: projects/pall
          method: post
          cors: true
          authorizer: aws_iam
  returnUsers:
    handler: returnUsers.main
    events:
      - http:
          path: users/view
          method: post
          cors: true
          authorizer: aws_iam
  updateProject:
    handler: updateProject.main
    events:
      - http:
          path: projects/{id}
          method: put
          cors: true
          authorizer: aws_iam
  removeProject:
    handler: removeProject.main
    events:
      - http:
          path: projects/{id}
          method: delete
          cors: true
          authorizer: aws_iam